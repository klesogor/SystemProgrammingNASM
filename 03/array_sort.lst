     1                                  
     2                                  global main
     3                                  extern printf, read_array, print_array, array, array_size
     4                                  
     5                                  section .data
     6 00000000 546869732070726F67-         mes               db 'This program is bubble sort.',10,0
     7 00000009 72616D206973206275-
     8 00000012 62626C6520736F7274-
     9 0000001B 2E0A00             
    10 0000001E 596F7520656E746572-         default_array_mes db 'You entered this array:',10,0
    11 00000027 656420746869732061-
    12 00000030 727261793A0A00     
    13 00000037 536F72746564206172-         sorted_array_mes  db 'Sorted array:',10,0
    14 00000040 7261793A0A00       
    15                                  section .text
    16                                  main:
    17 00000000 68[00000000]                push mes
    18 00000005 E8(00000000)                call printf
    19 0000000A 83C404                      add esp,4
    20                                  
    21                                      ;read array
    22 0000000D E8(00000000)                call read_array
    23                                      ;print array
    24 00000012 68[1E000000]                push default_array_mes
    25 00000017 E8(00000000)                call printf
    26 0000001C 83C404                      add esp,4
    27                                      
    28 0000001F E8(00000000)                call print_array
    29                                  
    30 00000024 E806000000                  call sort_array
    31                                  
    32 00000029 E8(00000000)                call print_array
    33                                  
    34 0000002E C3                          ret
    35                                  
    36                                  sort_array: ;eax - counter, ebx - flag; ecx,edx - available
    37 0000002F 8B35[00000000]              mov esi, [array_size]
    38 00000035 BF[00000000]                mov edi, array;pointer to array
    39 0000003A 4E                          dec esi;points to pre-last element of array
    40                                      external_loop:
    41 0000003B B800000000                  mov eax,0
    42 00000040 BB00000000                  mov ebx,0; flag
    43                                          internal_loop:
    44 00000045 8B0C87                          mov ecx, [edi + eax * 4]
    45 00000048 8B548704                        mov edx, [edi + eax * 4 + 4]
    46 0000004C 39D1                            cmp ecx,edx
    47 0000004E 7E0C                            jle skip_swap
    48                                              swap:
    49 00000050 894C8704                            mov [edi + eax * 4 + 4], ecx
    50 00000054 891487                              mov [edi + eax * 4], edx
    51 00000057 BB01000000                          mov ebx,1
    52                                          skip_swap:
    53 0000005C 40                              inc eax
    54 0000005D 39F0                            cmp eax,esi
    55 0000005F 75E4                            jne internal_loop
    56                                          out_internal:
    57 00000061 83FB00                          cmp ebx,0
    58 00000064 7403                            je finally
    59 00000066 4E                              dec esi
    60 00000067 75D2                            jnz external_loop
    61                                  
    62                                  finally:
    63 00000069 C3                      ret
